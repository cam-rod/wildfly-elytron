<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">

    <channel>
        <title>WildFly Elytron</title>
        <link>https://wildfly-security.github.io/wildfly-elytron</link>
        <description></description>
        <lastBuildDate>Tue, 21 Jun 2022 21:22:28 +0000</lastBuildDate>
        
        <item>
            <title>Securing Jakarta Enterprise Beans with mutual TLS authentication</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/ejb-over-tls/
            </link>
            <description>
                The ejb-mutual-tls example demonstrates how to use Elytron to secure EJBs with mutual TLS authentication. It also shows how to restrict access to EJBs, configuring a FileSystem realm protected by SASL authentication, and accessed using a credential store. This example focuses on the TLS configuration, so if you wish to...
            </description>
            <pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/ejb-over-tls/
            </guid>
        </item>
        
        <item>
            <title>New Security Features in WildFly 26.1</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/new-security-features-wildfly-26-1/
            </link>
            <description>
                Since WildFly 26.1 was just released, we wanted to highlight some new security features included in this release. New Features Automatic Registration of a Client Side Default SSLContext The Elytron authentication client now provides a Java security provider that can be used to register a JVM wide default SSLContext. When...
            </description>
            <pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/new-security-features-wildfly-26-1/
            </guid>
        </item>
        
        <item>
            <title>Improving readability of certificate read commands</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/improving-readability-of-alias-commands/
            </link>
            <description>
                Any one who has experience with network hardware or console administration knows the Achilles' heel of CLI - limited visualization capability. This can be somewhat mitigated by setting large horizontal buffer and simple scrolling. However not all devices support scrolling and output still can be loitered with wrapped lines. This...
            </description>
            <pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/improving-readability-of-alias-commands/
            </guid>
        </item>
        
        <item>
            <title>Encrypting Filesystem realms</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/filesystem-encryption/
            </link>
            <description>
                Previously, any data in the filesystem realm was always stored unencrypted, this meant that anyone with access to the filesystem identity files could access the credentials, and attributes (such as assigned roles). Now encryption has been added via a SecretKey. An overview of the new attributes The filesystem realm now...
            </description>
            <pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/filesystem-encryption/
            </guid>
        </item>
        
        <item>
            <title>Encrypting Pre-Existing Filesystem realms</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/filesystem-encryption-tool/
            </link>
            <description>
                Overview With the addition of the filesystem realm encryption feature outlined here, a feature was added to the Elytron Tool to encrypt a pre-existing filesystem realm. Method to run the tool There are two methods to run the tool, one is on the command line, that only lets you apply...
            </description>
            <pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/filesystem-encryption-tool/
            </guid>
        </item>
        
        <item>
            <title>Client side default SSL context provider</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/client-default-ssl-context/
            </link>
            <description>
                Elytron client now provides a java security provider which can be used to register a JVM wide default SSLContext. When this provider is registered with high enough priority and the method SSLContext.getDefault() is called, the provider instantiates and returns an SSLContext based on an Elytron client configuration file. So all...
            </description>
            <pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/client-default-ssl-context/
            </guid>
        </item>
        
        <item>
            <title>Vlog: Securing a WildFly Application with OpenID Connect on OpenShift</title>
            <link>
                https://www.youtube.com/watch?v=2gQO4_7Z5CI
            </link>
            <description>
                
            </description>
            <pubDate>Tue, 29 Mar 2022 00:00:00 +0000</pubDate>
            <guid>
                https://www.youtube.com/watch?v=2gQO4_7Z5CI
            </guid>
        </item>
        
        <item>
            <title>Multi-tenancy Support for OpenID Connect Applications</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/multi-tenancy-support-openid-connect/
            </link>
            <description>
                As mentioned in my last blog post, applications deployed to WildFly can be secured with OpenID Connect, without needing to use the Keycloak client adapter. WildFly 26.0.1.Final, which was just released, includes a fix for multi-tenancy support for OpenID Connect applications. This blog post gives an overview of how to...
            </description>
            <pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/multi-tenancy-support-openid-connect/
            </guid>
        </item>
        
        <item>
            <title>Upcoming filesystem realm encryption and integrity support in Elytron</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/upcoming-filesystem-encryption-integrity/
            </link>
            <description>
                Two features that we have been working during the WildFly 26 development phase is the ability to encrypt filesystem security realms with a SecretKey, and the ability to verify filesystem integrity with a KeyPair. This feature will be included in a future WildFly release. An Overview of Filesystem Realm Encryption...
            </description>
            <pubDate>Fri, 17 Dec 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/upcoming-filesystem-encryption-integrity/
            </guid>
        </item>
        
        <item>
            <title>Securing WildFly Apps with OpenID Connect</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/securing-wildfly-apps-openid-connect/
            </link>
            <description>
                WildFly 25 added the ability to secure applications using OpenID Connect, without needing to make use of the Keycloak client adapter. This blog post gives an introduction to this feature. OpenID Connect New elytron-oidc-client Subsystem Deployment Configuration Subsystem Configuration Required Configuration Options OpenID Providers Securing an application using OIDC Example...
            </description>
            <pubDate>Fri, 17 Dec 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/securing-wildfly-apps-openid-connect/
            </guid>
        </item>
        
    </channel>
</rss>
